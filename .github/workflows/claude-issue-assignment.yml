name: Claude Code Issue Assignment

on:
  issues:
    types: [assigned]

jobs:
  claude-issue-handler:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.assignees.*.login, 'claude-code-bot') || contains(github.event.issue.labels.*.name, 'claude-code')
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create branch for issue
        run: |
          # Create branch name from issue number and title
          ISSUE_NUMBER="${{ github.event.issue.number }}"
          ISSUE_TITLE="${{ github.event.issue.title }}"
          # Clean title for branch name (remove special chars, lowercase, replace spaces with hyphens)
          CLEAN_TITLE=$(echo "$ISSUE_TITLE" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9 ]//g' | sed 's/ /-/g' | cut -c1-50)
          BRANCH_NAME="claude/issue-${ISSUE_NUMBER}-${CLEAN_TITLE}"
          
          # Create and switch to new branch
          git config user.name "claude-code-bot"
          git config user.email "claude-code-bot@users.noreply.github.com"
          git checkout -b "$BRANCH_NAME"
          git push origin "$BRANCH_NAME"
          
          # Store branch name for next step
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Add comment to issue
        uses: actions/github-script@v7
        with:
          script: |
            const branchName = process.env.BRANCH_NAME;
            const comment = `ðŸ¤– **Claude Code has been assigned to this issue!**
            
            I've created a new branch: \`${branchName}\`
            
            I'll start working on this issue and create a pull request when ready.
            
            **What happens next:**
            1. I'll analyze the issue requirements
            2. Implement the necessary changes
            3. Run tests and quality checks
            4. Create a pull request for review
            
            You can track my progress by watching for commits on the branch.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install uv
        run: pip install uv

      - name: Install dependencies
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -e ".[dev]"

      - name: Claude Code Implementation
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          timeout_minutes: "120"
          direct_prompt: |
            I've been assigned to work on GitHub Issue #${{ github.event.issue.number }}.
            
            **Issue Title:** ${{ github.event.issue.title }}
            
            **Issue Description:**
            ${{ github.event.issue.body }}
            
            **Instructions:**
            1. Analyze the issue requirements carefully
            2. Implement the necessary changes following the project's coding standards
            3. Ensure all changes are well-tested and documented
            4. Follow the patterns and conventions established in the codebase
            5. Run quality checks (pytest, black, mypy) to ensure code quality
            6. Commit changes with clear, descriptive commit messages
            7. When implementation is complete, create a pull request
            
            **Branch:** I'm working on branch `${{ env.BRANCH_NAME }}`
            
            Please implement the solution for this issue following the project's guidelines in CLAUDE.md and the development workflow.
            
            Remember to:
            - Follow the existing code patterns and architecture
            - Add appropriate tests for new functionality
            - Update documentation if needed
            - Ensure all quality checks pass
            - Create meaningful commit messages
          allowed_tools: "bash,read,write,edit,glob,grep"

      - name: Create Pull Request
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const branchName = process.env.BRANCH_NAME;
            
            // Check if there are any commits on the branch
            const commits = await github.rest.repos.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: branchName
            });
            
            // Only create PR if there are commits beyond the base
            if (commits.data.length > 0) {
              const pr = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `Fix #${{ github.event.issue.number }}: ${{ github.event.issue.title }}`,
                head: branchName,
                base: 'main',
                body: `Closes #${{ github.event.issue.number }}
                
                ## Summary
                This PR implements the solution for the assigned issue.
                
                ## Changes Made
                - [List of changes will be added by Claude Code]
                
                ## Testing
                - All existing tests pass
                - New tests added where appropriate
                - Code quality checks pass
                
                ðŸ¤– This PR was created automatically by Claude Code.`
              });
              
              // Link the PR to the issue
              await github.rest.issues.createComment({
                issue_number: ${{ github.event.issue.number }},
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `âœ… **Implementation Complete!**
                
                I've finished working on this issue and created pull request #${pr.data.number} for review.
                
                The solution has been implemented and all quality checks have passed.`
              });
            }